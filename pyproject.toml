[tool.poetry]
name = "fastapi-sample"
version = "0.1.0"
description = ""
authors = ["Taein Min <maintain0404@gmail.com>"]
readme = "README.md"
packages = [{include = "app"}]

# Dependencies
[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.88.0"
uvicorn = {extras = ["standard"], version = "^0.20.0"}
sqlalchemy = {extras = ["asyncio", "asyncpg"], version = "^2.0.4"}
bcrypt = "^4.0.1"
pyjwt = "^2.6.0"

[tool.poetry.group.dev]
optional = true

    [tool.poetry.group.dev.dependencies]
    mypy = "^1.0.0"
    black = "^22.12.0"
    isort = "^5.11.4"
    pycln = "^2.1.2"

[tool.poetry.group.doc]
optional = true

    [tool.poetry.group.doc.dependencies]
    mkdocs-material = "^8.5.11"
    mkdocstrings = {extras = ["python"], version = "^0.19.1"}

[tool.poetry.group.test]
optional = true

    [tool.poetry.group.test.dependencies]
    pytest = "^7.2.0"
    pytest-asyncio = "^0.20.3"
    async-asgi-testclient = "^1.4.11"

# Formatter/Linter
[tool.isort]
profile = "black"
src_paths = ["app", "tests"]
force_alphabetical_sort_within_sections = true
extra_standard_library = ["typing_extensions"]
known_first_party=["common", "core", "domain", "handler", "util"]

[tool.pycln]
paths = ["app", "tests"]

[tool.mypy]
mypy_path = './app'
explicit_package_bases = true
plugins = ["sqlalchemy.ext.mypy.plugin", "pydantic.mypy"]

[[tool.mypy.overrides]]
module = ['tests']

# Test
[tool.pytest.ini_options]
pythonpath = ["./", "./app"]
rootdir = './'
asyncio_mode = 'auto'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
